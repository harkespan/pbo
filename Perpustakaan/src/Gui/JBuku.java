/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Gui;

import Model.Buku;
import Model.Connection;
import Model.Penulis;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harke
 */
public class JBuku extends javax.swing.JFrame {

    List<Buku> buku = new ArrayList<>();
    List<Penulis> penulis = new ArrayList<>();
    /**
     * Creates new form JBuku
     */
    public JBuku() {
        initComponents();
        showComboBox();
        showTableData();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtJudul = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTahun = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtStok = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        dataPenulis = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBuku = new javax.swing.JTable();
        btnSimpan = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnKosong = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Master Buku");

        jLabel2.setText("Judul Buku");

        jLabel3.setText("Tahun Terbit");

        jLabel4.setText("Stok");

        jLabel5.setText("Penulis");

        dataPenulis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tblBuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblBuku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBukuMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblBuku);

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");

        btnHapus.setText("Hapus");

        btnKosong.setText("Kosongkan");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSimpan)
                        .addGap(18, 18, 18)
                        .addComponent(btnEdit)
                        .addGap(18, 18, 18)
                        .addComponent(btnHapus)
                        .addGap(18, 18, 18)
                        .addComponent(btnKosong))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtJudul, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStok, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dataPenulis, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTahun, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtJudul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTahun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtStok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(dataPenulis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSimpan)
                    .addComponent(btnEdit)
                    .addComponent(btnHapus)
                    .addComponent(btnKosong))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:
        String judul = txtJudul.getText();
        int tahun = Integer.parseInt(txtTahun.getText());
        int stok = Integer.parseInt(txtStok.getText());
        Penulis p = (Penulis)dataPenulis.getSelectedItem();
        
        Connection.koneksi();
        String sql = "INSERT INTO buku (judul_buku, tahun_terbit, stok, penulis) VALUES "+
                " (?,?,?,?)";
        
        try {
            PreparedStatement pms = Connection.conn.prepareStatement(sql);
            pms.setString(1, judul);
            pms.setInt(2, tahun);
            pms.setInt(3, stok);
            pms.setInt(4, p.getId());
            
            pms.execute();
            Connection.stmt.close();
            showTableData();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void tblBukuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBukuMouseClicked
        // TODO add your handling code here:
        getData();
    }//GEN-LAST:event_tblBukuMouseClicked

    public void showComboBox()
    {
        
        Connection.koneksi();
        String sql = "SELECT * FROM penulis";
        try
        {
           penulis.clear();
           Connection.rs = Connection.stmt.executeQuery(sql); 
           while(Connection.rs.next())
           {
               penulis.add(new Penulis(Connection.rs.getInt("id"), Connection.rs.getString("nama")));
           }
           dataPenulis.setModel(new DefaultComboBoxModel(penulis.toArray()));
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    public void showTableData()
    {
        Connection.koneksi();
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No");
        model.addColumn("Judul Buku");
        model.addColumn("Tahun Terbit");
        model.addColumn("Stok");
        model.addColumn("Penulis");
        String sql = "SELECT * FROM buku a JOIN penulis b ON (a.penulis = b.id)";
        try {
           buku.clear();
           Connection.rs = Connection.stmt.executeQuery(sql); 
           while(Connection.rs.next())
           {
               buku.add(new Buku(Connection.rs.getInt("id"), Connection.rs.getString("judul_buku"), 
                       Connection.rs.getInt("tahun_terbit"), Connection.rs.getInt("stok"), Connection.rs.getInt("penulis")));
           }
           
           int i = 1;
           for(Buku b: buku)
           {
               int penulisId = b.getPenulis();
               String namaPenulis = getDataPenulis(penulis, penulisId);
               model.addRow(new Object[] {
                   i,b.getJudulBuku(), b.getTahunTerbit(), b.getStok(), namaPenulis
               });
               i++;
           }
           Connection.rs.close();
           tblBuku.setModel(model);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    public String getDataPenulis(List<Penulis> p, int id)
    {
        for(Penulis _p: p)
        {
            if(_p.getId() == id)
            {
                return _p.getNama();
            }
        }
        
        return "-";
    }
    
    public int getPenulisIndex(List<Penulis> authors, int id)
    {
        int targetIndex = -1;
        
        for(int i = 0; i < authors.size(); i++)
        {
            if(authors.get(i).getId() == id)
            {
                targetIndex = i;
                break;
            }
        }
        
        if(targetIndex != -1)
        {
            return targetIndex;
        }
        else
        {
            return 0;
        }
    }
    
    public void getData()
    {
        int baris = tblBuku.getSelectedRow();
        txtJudul.setText(buku.get(baris).getJudulBuku());
        txtTahun.setText(Integer.toString(buku.get(baris).getTahunTerbit()));
        txtStok.setText(Integer.toString(buku.get(baris).getStok()));
        dataPenulis.setSelectedIndex(getPenulisIndex(penulis, buku.get(baris).getPenulis()));
 

    }
    /**
     * @param args the command line arguments
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKosong;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JComboBox<String> dataPenulis;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tblBuku;
    private javax.swing.JTextField txtJudul;
    private javax.swing.JTextField txtStok;
    private javax.swing.JTextField txtTahun;
    // End of variables declaration//GEN-END:variables
}
